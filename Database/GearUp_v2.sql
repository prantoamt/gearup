-- MySQL Script generated by MySQL Workbench
-- Sat Dec 23 01:28:04 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema GearUp
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `GearUp` ;

-- -----------------------------------------------------
-- Schema GearUp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GearUp` DEFAULT CHARACTER SET utf8 ;
USE `GearUp` ;

-- -----------------------------------------------------
-- Table `GearUp`.`master`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`master` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`master` (
  `uId` INT NOT NULL AUTO_INCREMENT,
  `fullName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `sType` VARCHAR(45) NULL,
  `Address` VARCHAR(75) NOT NULL,
  PRIMARY KEY (`uId`),
  UNIQUE INDEX `username_UNIQUE` (`phoneNumber` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`currentLoc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`currentLoc` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`currentLoc` (
  `uId` INT NOT NULL,
  `locId` INT NOT NULL,
  `lat` FLOAT(10) NOT NULL,
  `long` FLOAT(10) NOT NULL,
  PRIMARY KEY (`uId`),
  CONSTRAINT `fk_table1_user1`
    FOREIGN KEY (`uId`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`request` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`request` (
  `uId1` INT NOT NULL,
  `uId2` INT NOT NULL,
  `time` TIMESTAMP NULL,
  INDEX `fk_follow_user1_idx` (`uId1` ASC),
  INDEX `fk_follow_user2_idx` (`uId2` ASC),
  PRIMARY KEY (`uId2`, `uId1`),
  CONSTRAINT `fk_follow_user1`
    FOREIGN KEY (`uId1`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_follow_user2`
    FOREIGN KEY (`uId2`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`chatSession`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`chatSession` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`chatSession` (
  `sessionId` INT NOT NULL AUTO_INCREMENT,
  `uId1` INT NOT NULL,
  `uId2` INT NOT NULL,
  `initialDate` DATETIME NULL,
  PRIMARY KEY (`sessionId`),
  INDEX `fk_chat_session_user1_idx` (`uId1` ASC),
  INDEX `fk_chat_session_user2_idx` (`uId2` ASC),
  CONSTRAINT `fk_chat_session_user1`
    FOREIGN KEY (`uId1`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_chat_session_user2`
    FOREIGN KEY (`uId2`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`chatHistory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`chatHistory` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`chatHistory` (
  `chatId` INT NOT NULL,
  `uId1` INT NOT NULL,
  `user_id2` INT NOT NULL,
  `msg` VARCHAR(160) NULL,
  `msgTime` TIMESTAMP NULL,
  INDEX `fk_chat_history_chat_session1_idx` (`chatId` ASC),
  INDEX `fk_chat_history_user1_idx` (`uId1` ASC),
  INDEX `fk_chat_history_user2_idx` (`user_id2` ASC),
  CONSTRAINT `fk_chat_history_chat_session1`
    FOREIGN KEY (`chatId`)
    REFERENCES `GearUp`.`chatSession` (`sessionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_chat_history_user1`
    FOREIGN KEY (`uId1`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_chat_history_user2`
    FOREIGN KEY (`user_id2`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`reviewTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`reviewTable` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`reviewTable` (
  `uIid` INT NOT NULL,
  `starts` INT NULL,
  `comments` VARCHAR(45) NULL,
  INDEX `fk_point_table_user1_idx` (`uIid` ASC),
  CONSTRAINT `fk_point_table_user1`
    FOREIGN KEY (`uIid`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`Plumber`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`Plumber` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`Plumber` (
  `uId` INT NOT NULL,
  `fullName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `sType` VARCHAR(45) NULL,
  `Address` VARCHAR(75) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`phoneNumber` ASC),
  PRIMARY KEY (`uId`),
  CONSTRAINT `fk_Plumber_master1`
    FOREIGN KEY (`uId`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`Mechanic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`Mechanic` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`Mechanic` (
  `master_uId` INT NOT NULL,
  `fullName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `sType` VARCHAR(45) NULL,
  `Address` VARCHAR(75) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`phoneNumber` ASC),
  PRIMARY KEY (`master_uId`),
  CONSTRAINT `fk_Mechanic_master1`
    FOREIGN KEY (`master_uId`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`Electrician`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`Electrician` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`Electrician` (
  `master_uId` INT NOT NULL,
  `fullName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `sType` VARCHAR(45) NULL,
  `Address` VARCHAR(75) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`phoneNumber` ASC),
  PRIMARY KEY (`master_uId`),
  CONSTRAINT `fk_Mechanic_master10`
    FOREIGN KEY (`master_uId`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`Client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`Client` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`Client` (
  `master_uId` INT NOT NULL,
  `fullName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `sType` VARCHAR(45) NULL,
  `Address` VARCHAR(75) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`phoneNumber` ASC),
  PRIMARY KEY (`master_uId`),
  CONSTRAINT `fk_Mechanic_master11`
    FOREIGN KEY (`master_uId`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GearUp`.`Others`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GearUp`.`Others` ;

CREATE TABLE IF NOT EXISTS `GearUp`.`Others` (
  `master_uId` INT NOT NULL,
  `fullName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `sType` VARCHAR(45) NULL,
  `Address` VARCHAR(75) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`phoneNumber` ASC),
  PRIMARY KEY (`master_uId`),
  CONSTRAINT `fk_Mechanic_master12`
    FOREIGN KEY (`master_uId`)
    REFERENCES `GearUp`.`master` (`uId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `GearUp`;

DELIMITER $$

USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`reviewInsert` $$
USE `GearUp`$$
CREATE TRIGGER reviewInsert AFTER INSERT ON `user`
  FOR EACH ROW
  BEGIN
	INSERT INTO review (uId,stars) VALUES (NEW.uId,50);
END;$$


USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`chatSession` $$
USE `GearUp`$$
CREATE TRIGGER chatSession AFTER INSERT ON `follow`
  FOR EACH ROW
  BEGIN
	IF NEW.user_id_1 = user_id_2
    THEN INSERT INTO chat_session (user_id1,user_id2) VALUES (NEW.user_id_1,NEW.user_id_2);
	END IF; 
END;$$


USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`reviewInsert` $$
USE `GearUp`$$
CREATE TRIGGER reviewInsert AFTER INSERT ON `user`
  FOR EACH ROW
  BEGIN
	INSERT INTO review (uId,stars) VALUES (NEW.uId,50);
END;$$


USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`reviewInsert` $$
USE `GearUp`$$
CREATE TRIGGER reviewInsert AFTER INSERT ON `user`
  FOR EACH ROW
  BEGIN
	INSERT INTO review (uId,stars) VALUES (NEW.uId,50);
END;$$


USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`reviewInsert` $$
USE `GearUp`$$
CREATE TRIGGER reviewInsert AFTER INSERT ON `user`
  FOR EACH ROW
  BEGIN
	INSERT INTO review (uId,stars) VALUES (NEW.uId,50);
END;$$


USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`reviewInsert` $$
USE `GearUp`$$
CREATE TRIGGER reviewInsert AFTER INSERT ON `user`
  FOR EACH ROW
  BEGIN
	INSERT INTO review (uId,stars) VALUES (NEW.uId,50);
END;$$


USE `GearUp`$$
DROP TRIGGER IF EXISTS `GearUp`.`reviewInsert` $$
USE `GearUp`$$
CREATE TRIGGER reviewInsert AFTER INSERT ON `user`
  FOR EACH ROW
  BEGIN
	INSERT INTO review (uId,stars) VALUES (NEW.uId,50);
END;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
